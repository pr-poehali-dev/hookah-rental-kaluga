import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import Icon from '@/components/ui/icon';

interface HookahSet {
  id: string;
  name: string;
  price: number;
  dailyPrice: number;
  deposit: number;
  available: number;
  total: number;
  description: string;
  includes: string[];
}

const Index = () => {
  const [isAdmin, setIsAdmin] = useState(false);
  const [bookingData, setBookingData] = useState({
    name: '',
    phone: '',
    address: '',
    set: '',
    duration: '',
    master: false,
    delivery: false
  });

  const [hookahSets, setHookahSets] = useState<HookahSet[]>([
    {
      id: '1',
      name: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π',
      price: 300,
      dailyPrice: 900,
      deposit: 3000,
      available: 5,
      total: 8,
      description: '–ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –æ—Ç–¥—ã—Ö–∞',
      includes: ['–ö–∞–ª—å—è–Ω', '–ß–∞—à–∞', '–ö–∞–ª–∞—É–¥', '–©–∏–ø—Ü—ã', '5 –º—É–Ω–¥—à—Ç—É–∫–æ–≤']
    },
    {
      id: '2',
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π',
      price: 450,
      dailyPrice: 1200,
      deposit: 5000,
      available: 3,
      total: 6,
      description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫',
      includes: ['–ö–∞–ª—å—è–Ω', '–ß–∞—à–∞', '–ö–∞–ª–∞—É–¥', '–©–∏–ø—Ü—ã', '10 –º—É–Ω–¥—à—Ç—É–∫–æ–≤', '–°–µ—Ç–∫–∞', '–ö–æ–ª–ø–∞–∫', '–ì–æ—Ä–µ–ª–∫–∞ –∏–ª–∏ –ø–ª–∏—Ç–∞']
    },
    {
      id: '3',
      name: '–ü—Ä–µ–º–∏—É–º',
      price: 0,
      dailyPrice: 1400,
      deposit: 8000,
      available: 2,
      total: 3,
      description: '–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤',
      includes: ['–ü—Ä–µ–º–∏—É–º –∫–∞–ª—å—è–Ω', '2 —á–∞—à–∏', '–ö–∞–ª–∞—É–¥', '–©–∏–ø—Ü—ã', '10 –º—É–Ω–¥—à—Ç—É–∫–æ–≤', '–°–µ—Ç–∫–∞', '–ö–æ–ª–ø–∞–∫', '–ì–æ—Ä–µ–ª–∫–∞ –∏–ª–∏ –ø–ª–∏—Ç–∞']
    }
  ]);

  const faqData = [
    {
      question: '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?',
      answer: '–î–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –≤—Å–µ–π –ö–∞–ª—É–≥–µ. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 200‚ÇΩ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞. –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.'
    },
    {
      question: '–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —É—Å–ª—É–≥—É –º–∞—Å—Ç–µ—Ä–∞?',
      answer: '–ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ–∑–∂–∞–µ—Ç, —Å–æ–±–∏—Ä–∞–µ—Ç –∫–∞–ª—å—è–Ω, –∑–∞–±–∏–≤–∞–µ—Ç —á–∞—à—É –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º. –°—Ç–æ–∏–º–æ—Å—Ç—å 1000‚ÇΩ/—á–∞—Å.'
    },
    {
      question: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –∑–∞–ª–æ–≥–∞?',
      answer: '–î–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–æ–≤ - –∑–∞–ª–æ–≥ –¥–µ–Ω—å–≥–∞–º–∏ –∏–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç. –î–ª—è –ø—Ä–µ–º–∏—É–º - —Ç–æ–ª—å–∫–æ –¥–µ–Ω—å–≥–∞–º–∏.'
    },
    {
      question: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–∞–±–∞–∫?',
      answer: '–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–∞–±–∞–∫ –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É –Ω–∞—Å.'
    },
    {
      question: '–°–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è –∞—Ä–µ–Ω–¥–∞?',
      answer: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ - 1 —á–∞—Å. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è - —Å—É—Ç–∫–∏. –í–æ–∑–º–æ–∂–Ω–∞ –ø–æ—á–∞—Å–æ–≤–∞—è –∏–ª–∏ —Å—É—Ç–æ—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞.'
    }
  ];

  const handleBooking = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ WhatsApp/Telegram
    const message = `–ù–æ–≤–∞—è –±—Ä–æ–Ω—å:
–ò–º—è: ${bookingData.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${bookingData.phone}
–ê–¥—Ä–µ—Å: ${bookingData.address}
–ù–∞–±–æ—Ä: ${bookingData.set}
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${bookingData.duration}
–ú–∞—Å—Ç–µ—Ä: ${bookingData.master ? '–î–∞' : '–ù–µ—Ç'}
–î–æ—Å—Ç–∞–≤–∫–∞: ${bookingData.delivery ? '–î–∞' : '–ù–µ—Ç'}`;
    
    alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
  };

  const updateAvailability = (id: string, available: number) => {
    setHookahSets(sets => 
      sets.map(set => 
        set.id === id ? { ...set, available } : set
      )
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-cyan-50 font-open-sans">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm sticky top-0 z-50 border-b">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-gradient-to-r from-primary to-secondary rounded-full flex items-center justify-center">
              <span className="text-white text-xl">üí®</span>
            </div>
            <h1 className="text-2xl font-montserrat font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
              Smokk Lab
            </h1>
          </div>
          <nav className="hidden md:flex space-x-8">
            <a href="#home" className="hover:text-primary transition-colors">–ì–ª–∞–≤–Ω–∞—è</a>
            <a href="#sets" className="hover:text-primary transition-colors">–ù–∞–±–æ—Ä—ã</a>
            <a href="#booking" className="hover:text-primary transition-colors">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</a>
            <a href="#delivery" className="hover:text-primary transition-colors">–î–æ—Å—Ç–∞–≤–∫–∞</a>
            <a href="#contacts" className="hover:text-primary transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
            <a href="#faq" className="hover:text-primary transition-colors">FAQ</a>
          </nav>
          <Button 
            variant="outline" 
            size="sm" 
            onClick={() => setIsAdmin(!isAdmin)}
            className="border-primary text-primary hover:bg-primary hover:text-white"
          >
            <Icon name="Settings" size={16} />
            –ê–¥–º–∏–Ω
          </Button>
        </div>
      </header>

      {/* Hero Section */}
      <section id="home" className="relative py-20 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-primary/20 to-secondary/20"></div>
        <div className="container mx-auto px-4 text-center relative z-10">
          <h2 className="text-5xl md:text-6xl font-montserrat font-bold mb-6 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
            üöÄ –ê—Ä–µ–Ω–¥–∞ –∫–∞–ª—å—è–Ω–æ–≤ –≤ –ö–∞–ª—É–≥–µ
          </h2>
          <p className="text-xl md:text-2xl text-gray-600 mb-8 max-w-3xl mx-auto">
            Smokk Lab ‚Äì –¥—ã–º–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞! –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–∞–ª—å—è–Ω—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –∏ –º–∞—Å—Ç–µ—Ä–æ–º
          </p>
          <div className="flex flex-wrap justify-center gap-4 mb-12">
            <Badge variant="secondary" className="text-lg px-4 py-2">‚úî 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–∞–±–æ—Ä–æ–≤</Badge>
            <Badge variant="secondary" className="text-lg px-4 py-2">‚úî –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</Badge>
            <Badge variant="secondary" className="text-lg px-4 py-2">‚úî –í—ã–µ–∑–¥ –º–∞—Å—Ç–µ—Ä–∞</Badge>
            <Badge variant="secondary" className="text-lg px-4 py-2">‚úî –ì–∞—Ä–∞–Ω—Ç–∏—è —á–∏—Å—Ç–æ—Ç—ã</Badge>
          </div>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" className="text-lg px-8 py-6 bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90">
              <Icon name="Phone" size={20} className="mr-2" />
              –ó–∞–∫–∞–∑–∞—Ç—å —Å–µ–π—á–∞—Å
            </Button>
            <Button size="lg" variant="outline" className="text-lg px-8 py-6 border-primary text-primary hover:bg-primary hover:text-white">
              <Icon name="Calendar" size={20} className="mr-2" />
              –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
            </Button>
          </div>
        </div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-primary/10 to-secondary/10 rounded-full blur-3xl -z-10"></div>
      </section>

      {/* Hookah Sets */}
      <section id="sets" className="py-20">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-montserrat font-bold text-center mb-12 text-gray-800">
            üí® –ù–∞—à–∏ –∫–∞–ª—å—è–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã
          </h3>
          <div className="grid md:grid-cols-3 gap-8">
            {hookahSets.map((set) => (
              <Card key={set.id} className="relative overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-2 border-2 border-transparent hover:border-primary/20">
                <div className="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-primary to-secondary opacity-10 rounded-bl-full"></div>
                <CardHeader>
                  <div className="flex justify-between items-start mb-2">
                    <CardTitle className="text-2xl font-montserrat font-bold text-gray-800">
                      {set.name}
                    </CardTitle>
                    <Badge variant={set.available > 0 ? "default" : "destructive"} className="ml-2">
                      {set.available}/{set.total}
                    </Badge>
                  </div>
                  <p className="text-gray-600">{set.description}</p>
                </CardHeader>
                <CardContent>
                  <div className="mb-4">
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-lg font-semibold text-primary">
                        {set.price > 0 ? `${set.price}‚ÇΩ/—á–∞—Å` : '–¢–æ–ª—å–∫–æ –ø–æ—Å—É—Ç–æ—á–Ω–æ'}
                      </span>
                      <span className="text-lg font-semibold text-secondary">
                        {set.dailyPrice}‚ÇΩ/—Å—É—Ç–∫–∏
                      </span>
                    </div>
                    <p className="text-sm text-gray-500">
                      üîπ –ó–∞–ª–æ–≥: {set.deposit.toLocaleString()}‚ÇΩ {set.id !== '3' && '–∏–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç'}
                    </p>
                  </div>
                  
                  <div className="mb-6">
                    <h4 className="font-semibold mb-2 text-gray-700">–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:</h4>
                    <ul className="text-sm text-gray-600 space-y-1">
                      {set.includes.map((item, idx) => (
                        <li key={idx} className="flex items-center">
                          <Icon name="Check" size={14} className="text-green-500 mr-2 flex-shrink-0" />
                          {item}
                        </li>
                      ))}
                    </ul>
                  </div>

                  {isAdmin && (
                    <div className="border-t pt-4 mt-4">
                      <Label htmlFor={`available-${set.id}`} className="text-sm font-medium">
                        –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞–±–æ—Ä–æ–≤:
                      </Label>
                      <Input
                        id={`available-${set.id}`}
                        type="number"
                        min="0"
                        max={set.total}
                        value={set.available}
                        onChange={(e) => updateAvailability(set.id, parseInt(e.target.value))}
                        className="w-20 mt-1"
                      />
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Booking Section */}
      <section id="booking" className="py-20 bg-gradient-to-r from-primary/5 to-secondary/5">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-montserrat font-bold text-center mb-12 text-gray-800">
            üì≤ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
          </h3>
          <Card className="max-w-2xl mx-auto">
            <CardHeader>
              <CardTitle className="text-2xl font-montserrat text-center">–ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–ª—å—è–Ω</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="name">–ò–º—è *</Label>
                  <Input
                    id="name"
                    value={bookingData.name}
                    onChange={(e) => setBookingData({...bookingData, name: e.target.value})}
                    placeholder="–í–∞—à–µ –∏–º—è"
                  />
                </div>
                <div>
                  <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                  <Input
                    id="phone"
                    value={bookingData.phone}
                    onChange={(e) => setBookingData({...bookingData, phone: e.target.value})}
                    placeholder="8 (XXX) XXX-XX-XX"
                  />
                </div>
              </div>
              
              <div>
                <Label htmlFor="address">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *</Label>
                <Input
                  id="address"
                  value={bookingData.address}
                  onChange={(e) => setBookingData({...bookingData, address: e.target.value})}
                  placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="set">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–±–æ—Ä *</Label>
                  <Select value={bookingData.set} onValueChange={(value) => setBookingData({...bookingData, set: value})}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–±–æ—Ä" />
                    </SelectTrigger>
                    <SelectContent>
                      {hookahSets.map((set) => (
                        <SelectItem 
                          key={set.id} 
                          value={set.name}
                          disabled={set.available === 0}
                        >
                          {set.name} {set.available === 0 && '(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)'}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <Label htmlFor="duration">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å *</Label>
                  <Select value={bookingData.duration} onValueChange={(value) => setBookingData({...bookingData, duration: value})}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="1 —á–∞—Å">1 —á–∞—Å</SelectItem>
                      <SelectItem value="2 —á–∞—Å–∞">2 —á–∞—Å–∞</SelectItem>
                      <SelectItem value="3 —á–∞—Å–∞">3 —á–∞—Å–∞</SelectItem>
                      <SelectItem value="—Å—É—Ç–∫–∏">–°—É—Ç–∫–∏</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <div className="flex gap-6">
                <label className="flex items-center space-x-2 cursor-pointer">
                  <input
                    type="checkbox"
                    checked={bookingData.master}
                    onChange={(e) => setBookingData({...bookingData, master: e.target.checked})}
                    className="rounded border-gray-300"
                  />
                  <span>–ù—É–∂–µ–Ω –º–∞—Å—Ç–µ—Ä (+1000‚ÇΩ/—á–∞—Å)</span>
                </label>
                <label className="flex items-center space-x-2 cursor-pointer">
                  <input
                    type="checkbox"
                    checked={bookingData.delivery}
                    onChange={(e) => setBookingData({...bookingData, delivery: e.target.checked})}
                    className="rounded border-gray-300"
                  />
                  <span>–î–æ—Å—Ç–∞–≤–∫–∞ (–æ—Ç 200‚ÇΩ)</span>
                </label>
              </div>

              <Button 
                onClick={handleBooking} 
                className="w-full text-lg py-6 bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90"
                disabled={!bookingData.name || !bookingData.phone || !bookingData.address || !bookingData.set || !bookingData.duration}
              >
                <Icon name="Send" size={20} className="mr-2" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </CardContent>
          </Card>
        </div>
      </section>

      {/* Delivery & Contacts */}
      <section id="delivery" className="py-20">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-2 gap-12">
            <div>
              <h3 className="text-3xl font-montserrat font-bold mb-8 text-gray-800">
                üöó –î–æ—Å—Ç–∞–≤–∫–∞
              </h3>
              <div className="space-y-6">
                <div className="flex items-start space-x-4">
                  <Icon name="MapPin" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">–ü–æ –≤—Å–µ–π –ö–∞–ª—É–≥–µ</h4>
                    <p className="text-gray-600">–î–æ—Å—Ç–∞–≤–ª—è–µ–º –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –≥–æ—Ä–æ–¥–∞</p>
                  </div>
                </div>
                <div className="flex items-start space-x-4">
                  <Icon name="Truck" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 200‚ÇΩ</h4>
                    <p className="text-gray-600">–¢–æ—á–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–π–æ–Ω–∞</p>
                  </div>
                </div>
                <div className="flex items-start space-x-4">
                  <Icon name="Clock" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h4>
                    <p className="text-gray-600">–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ</p>
                  </div>
                </div>
              </div>
            </div>
            
            <div id="contacts">
              <h3 className="text-3xl font-montserrat font-bold mb-8 text-gray-800">
                üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã
              </h3>
              <div className="space-y-6">
                <div className="flex items-start space-x-4">
                  <Icon name="Phone" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">8 (995) 328-71-52</h4>
                    <p className="text-gray-600">WhatsApp / Telegram</p>
                  </div>
                </div>
                <div className="flex items-start space-x-4">
                  <Icon name="Clock" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ 10:00 - 20:00</h4>
                    <p className="text-gray-600">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</p>
                  </div>
                </div>
                <div className="flex items-start space-x-4">
                  <Icon name="MapPin" size={24} className="text-primary mt-1" />
                  <div>
                    <h4 className="font-semibold text-lg">–ü—É—Ç–µ–π—Å–∫–∞—è 23</h4>
                    <p className="text-gray-600">–ù–∞—à –æ—Ñ–∏—Å</p>
                  </div>
                </div>
                <div className="flex gap-4 mt-8">
                  <Button className="bg-green-500 hover:bg-green-600">
                    <Icon name="MessageCircle" size={20} className="mr-2" />
                    WhatsApp
                  </Button>
                  <Button className="bg-blue-500 hover:bg-blue-600">
                    <Icon name="Send" size={20} className="mr-2" />
                    Telegram
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section id="faq" className="py-20 bg-gradient-to-r from-primary/5 to-secondary/5">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-montserrat font-bold text-center mb-12 text-gray-800">
            ‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h3>
          <div className="max-w-3xl mx-auto">
            <Accordion type="single" collapsible className="space-y-4">
              {faqData.map((item, index) => (
                <AccordionItem key={index} value={`item-${index}`} className="bg-white rounded-lg px-6">
                  <AccordionTrigger className="text-left font-montserrat font-semibold">
                    {item.question}
                  </AccordionTrigger>
                  <AccordionContent className="text-gray-600">
                    {item.answer}
                  </AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-4 text-center">
          <div className="flex items-center justify-center space-x-3 mb-6">
            <div className="w-10 h-10 bg-gradient-to-r from-primary to-secondary rounded-full flex items-center justify-center">
              <span className="text-white text-xl">üí®</span>
            </div>
            <h4 className="text-2xl font-montserrat font-bold">Smokk Lab</h4>
          </div>
          <p className="text-gray-400 mb-4">
            üéâ –ö–∞–ª—å—è–Ω ‚Äì –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –≥–æ—Ä–æ–¥–∞! –î–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫, —Å–≤–∏–¥–∞–Ω–∏–π, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–æ–≤ –∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞
          </p>
          <div className="flex justify-center space-x-8 text-sm text-gray-500">
            <span>üìå –°–≤–æ–π —Ç–∞–±–∞–∫? –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à!</span>
            <span>üìå –ê—Ä–µ–Ω–¥–∞ + –º–∞—Å—Ç–µ—Ä = –∏–¥–µ–∞–ª—å–Ω—ã–π –¥—ã–º –±–µ–∑ —Ö–ª–æ–ø–æ—Ç</span>
          </div>
          <div className="mt-8 text-gray-500 text-sm">
            ¬© 2024 Smokk Lab. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;